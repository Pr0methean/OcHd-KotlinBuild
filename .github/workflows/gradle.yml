# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  schedule:
    # TODO: Switch from hourly back to nightly once we have enough data on which branch performs better
    - cron: "15 * * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'corretto'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@fd32ae908111fe31afa48827bd1ee909540aa971
      with:
        gradle-version: '8.0-milestone-2'
        arguments: jar --scan --warning-mode all
    - name: Upload Fat Jar
      uses: actions/upload-artifact@v3
      with:
        name: OcHD-App
        path: build/libs/*.jar
  make-texture:
    needs: build
    strategy:
      matrix:
        size: [ 4096, 2048, 1024, 512, 256, 128, 64, 32 ]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'corretto'
        check-latest: true
    - name: Download Fat Jar
      uses: actions/download-artifact@v3
      with:
        name: OcHD-App
    - name: Make Textures
      id: run
      run: >
        java -Dprism.maxvram=2560m -Dglass.platform=Monocle -Dmonocle.platform=Headless -Dquantum.multithreaded=true 
        -XX:+UseStringDeduplication  -Xms4G -Xmx4G -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:NewRatio=15
        '-Xlog:gc*=debug,gc+stats=trace,gc+heap=trace,gc+heap+exit=trace,gc+metaspace=trace,gc+nmethod=info,safepoint+stats=info,stringdedup*=debug' 
        -XX:+UseNUMA -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -XX:+AlwaysPreTouch -XX:+UseTransparentHugePages 
        -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:StringDeduplicationAgeThreshold=1
        -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector
        -jar OcHd-KotlinBuild-1.0-SNAPSHOT.jar ${{ matrix.size }}

      continue-on-error: true
      timeout-minutes: 60
    - name: Zip Texture Pack
      if: steps.run.outcome == 'success'
      run: cd pngout && zip -r OcHD-${{ matrix.size}}x${{ matrix.size}}.zip *
    - name: Publish Texture Pack
      if: steps.run.outcome == 'success'
      uses: actions/upload-artifact@v3
      with:
        name: OcHD ${{ matrix.size }}x${{ matrix.size }}
        path: 'pngout/OcHD-${{ matrix.size}}x${{ matrix.size}}.zip'
    - name: Publish Heap Dumps
      if: steps.run.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: Heap Dump ${{ matrix.size }}x${{ matrix.size }}
        path: '*.hprof'
    - name: Mark Job Failed After Heap Dump
      if: steps.run.outcome != 'success'
      run: 'false'